<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>DailyWord</title>
    <url>/wiki/DailyWord/</url>
    <content><![CDATA[<font size="3">
本文意在记录每日遇到的较难的英语单词，草稿纸容易丢掉，记录在云上更有性价比！

<span id="more"></span>
<h2 id="当前时间"><a href="#当前时间" class="headerlink" title="当前时间"></a>当前时间</h2><p>Current time in format 1: <time id="current-time-format1"></time></p>
<p>Current time in format 2: <time id="current-time-format2"></time></p>

<script>
function updateCurrentTime() {
    var currentTime = new Date();

    // 格式1: Week Month DD, YYYY HH:mm:ss
    var options1 = { 
        year: 'numeric', 
        month: 'long', 
        day: '2-digit', 
        hour: '2-digit', 
        minute: '2-digit', 
        second: '2-digit',
        weekday: 'long'
    };
    var formattedTime1 = currentTime.toLocaleString('en-US', options1);
    document.getElementById('current-time-format1').textContent = formattedTime1;

    // 格式2: YYYY-MM-DDTHH:mm:ss
    var year = currentTime.getFullYear();
    var month = (currentTime.getMonth() + 1).toString().padStart(2, '0');
    var day = currentTime.getDate().toString().padStart(2, '0');
    var hours = currentTime.getHours().toString().padStart(2, '0');
    var minutes = currentTime.getMinutes().toString().padStart(2, '0');
    var seconds = currentTime.getSeconds().toString().padStart(2, '0');
    var formattedTime2 = `${year}-${month}-${day}T${hours}:${minutes}:${seconds}`;
    document.getElementById('current-time-format2').textContent = formattedTime2;
}

// 初次加载页面时更新时间
updateCurrentTime();

// 每秒更新一次时间
setInterval(updateCurrentTime, 1000);
</script>


<h2 id="Wordlist"><a href="#Wordlist" class="headerlink" title="Wordlist"></a>Wordlist</h2><h3 id="2024-05-24"><a href="#2024-05-24" class="headerlink" title="2024-05-24"></a>2024-05-24</h3><p><time>2024-05-24 20:53:56</time></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">herd n. 一般民众 vi.(把...)赶到一起，聚到一起</span><br><span class="line">spur vt. 促进，加速</span><br><span class="line">discourse n.话语，语篇，演讲</span><br></pre></td></tr></table></figure>








<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote>
<ul>
<li><a href></a></li>
<li><a href></a></li>
</ul>
</blockquote>
</font>]]></content>
      <categories>
        <category>学习</category>
        <category>English</category>
      </categories>
      <tags>
        <tag>English</tag>
        <tag>DailyTask</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker Bash Command</title>
    <url>/wiki/Docker-Bash-Command/</url>
    <content><![CDATA[<font size="3">
本文为Docker Bash Command的一些基本指令集合
<span id="more"></span>
### Command
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>.docker-compose的使用非常类似于docker命令的使用，</span><br><span class="line">但是需要注意的是大部分的compose命令都需要到docker-compose.yml文件所在的目录下才能执行。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>.【Linux命令】docker-compose up</span><br><span class="line"></span><br><span class="line">【命令解释】 命令聚合每个容器的输出，命令退出时，所有容器都将停止。</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>.【Linux命令】docker-compose up -d</span><br><span class="line"></span><br><span class="line">【命令解释】 在后台启动容器并使它们保持运行。</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>.【Linux命令】docker-compose logs -f</span><br><span class="line"></span><br><span class="line">【命令解释】 查看该容器的启动的日志打印(日志从头打印)。</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>.【Linux命令】docker logs -f container_id</span><br><span class="line"></span><br><span class="line">【命令解释】 查看某一容器的启动的日志打印(日志从头打印)。</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>.【Linux命令】docker logs -f --tail 数量词 container_id</span><br><span class="line"></span><br><span class="line">【命令解释】 查看某一容器的启动的日志打印(查看最后n条日志打印)。 </span><br><span class="line">例：docker logs -f --tail <span class="number">50</span> <span class="number">44</span>b</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>.【Linux命令】docker-compose stop</span><br><span class="line"></span><br><span class="line">【命令解释】 停止compose服务。</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>.【Linux命令】docker-compose restart</span><br><span class="line"></span><br><span class="line">【命令解释】 重启compose服务。</span><br><span class="line"></span><br><span class="line"><span class="number">9</span>.【Linux命令】docker-compose kill</span><br><span class="line"></span><br><span class="line">【命令解释】 kill compose服务。</span><br><span class="line"></span><br><span class="line"><span class="number">10</span>.【Linux命令】docker-compose ps</span><br><span class="line"></span><br><span class="line">【命令解释】查看compose服务状态。</span><br><span class="line"></span><br><span class="line"><span class="number">11</span>.【Linux命令】docker-compose rm</span><br><span class="line"></span><br><span class="line">【命令解释】删除compose服务。</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote>
<ul>
<li><a href></a></li>
<li><a href></a></li>
</ul>
</blockquote>
</font>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker &amp;&amp; Compose Install</title>
    <url>/wiki/Docker-Compose-Install/</url>
    <content><![CDATA[<font size="3">
本文对Docker && Compose Install的安装的指令进行收集，避免再次网上收集的繁琐
<span id="more"></span>
## 一、Docker安装与Docker-Compose安装
### 1.安装 Docker（非大陆服务器）
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看 docker 版本</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure>
<h3 id="2-安装-Docker-compose（非大陆服务器）"><a href="#2-安装-Docker-compose（非大陆服务器）" class="headerlink" title="2.安装 Docker-compose（非大陆服务器）"></a>2.安装 Docker-compose（非大陆服务器）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version  <span class="comment">#查看 docker-compose 版本</span></span><br></pre></td></tr></table></figure>
<h3 id="3-安装-Docker（国内服务器）"><a href="#3-安装-Docker（国内服务器）" class="headerlink" title="3.安装 Docker（国内服务器）"></a>3.安装 Docker（国内服务器）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看 docker 版本</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure>
<h3 id="4-安装-Docker-compose（国内服务器）"><a href="#4-安装-Docker-compose（国内服务器）" class="headerlink" title="4.安装 Docker-compose（国内服务器）"></a>4.安装 Docker-compose（国内服务器）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/v2.1.1/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` &gt; /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version  <span class="comment">#查看 docker-compose 版本</span></span><br></pre></td></tr></table></figure>

<h2 id="二、必要设置"><a href="#二、必要设置" class="headerlink" title="二、必要设置"></a>二、必要设置</h2><h3 id="1-设置一"><a href="#1-设置一" class="headerlink" title="1.设置一"></a>1.设置一</h3><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘(泪的教训):</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>然后重启 Docker 服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>








<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote>
<ul>
<li><a href></a></li>
<li><a href></a></li>
</ul>
</blockquote>
</font>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker-compose-Halo</title>
    <url>/wiki/Docker-compose-Halo/</url>
    <content><![CDATA[<font size="3">
本文为Docker-compose-Halo项目的业务代码，且进行一些配置的说明
<span id="more"></span>
### Docker-compose.yml
<figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.9&#x27;</span>  </span><br><span class="line">services:  </span><br><span class="line">    halo:  </span><br><span class="line">        image: <span class="string">&#x27;halohub/halo:2.15&#x27;</span>  </span><br><span class="line">        volumes:  </span><br><span class="line">            - <span class="string">&#x27;~/.halo2:/root/.halo2&#x27;</span>  </span><br><span class="line">        ports:  </span><br><span class="line">            - <span class="string">&#x27;8090:8090&#x27;</span>  </span><br><span class="line">        container_name: halo</span><br></pre></td></tr></table></figure>

<h3 id="注意"><a href="#注意" class="headerlink" title="注意:"></a>注意:</h3><h4 id="1-注意一："><a href="#1-注意一：" class="headerlink" title="1.注意一："></a>1.注意一：</h4><p>进入后台：</p>
<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">ip:port/console</span><br></pre></td></tr></table></figure>
<h4 id="2-注意二："><a href="#2-注意二：" class="headerlink" title="2.注意二："></a>2.注意二：</h4><p>值得一提的</p>
<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">- &#x27;~/.halo2:/root/.halo2&#x27;  </span><br></pre></td></tr></table></figure>
<ul>
<li>~.&#x2F;halo2必须存在，否则工程无法的正常运行</li>
</ul>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote>
<ul>
<li><a href></a></li>
<li><a href></a></li>
</ul>
</blockquote>
</font>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker-compose-TTRSS</title>
    <url>/wiki/Docker-compose-TTRSS/</url>
    <content><![CDATA[<font size="3">
 本文为Docker-compose-TTRSS项目的业务代码，且进行一些配置的说明
<span id="more"></span>
### Docker-compose.yml
<figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line">services:</span><br><span class="line">  rss:</span><br><span class="line">    image: wangqiru/ttrss:latest</span><br><span class="line">    container_name: ttrss</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="number">2077</span>:<span class="number">80</span></span><br><span class="line">    environment:</span><br><span class="line">      - SELF_URL_PATH=http:<span class="comment">//localhost:2077/</span></span><br><span class="line">      - DB_PASS=ttrss</span><br><span class="line">      - PUID=<span class="number">1000</span></span><br><span class="line">      - PGID=<span class="number">1000</span></span><br><span class="line">    volumes:</span><br><span class="line">      - feed-icons:/var/www/feed-icons/</span><br><span class="line">    networks:</span><br><span class="line">      - public_access</span><br><span class="line">      - service_only</span><br><span class="line">      - database_only</span><br><span class="line">    stdin_open: <span class="literal">true</span></span><br><span class="line">    tty: <span class="literal">true</span></span><br><span class="line">    restart: always</span><br><span class="line"></span><br><span class="line">  mercury:</span><br><span class="line">    image: wangqiru/mercury-parser-api:latest</span><br><span class="line">    container_name: mercury</span><br><span class="line">    networks:</span><br><span class="line">      - public_access</span><br><span class="line">      - service_only</span><br><span class="line">    restart: always</span><br><span class="line"></span><br><span class="line">  opencc:</span><br><span class="line">    image: wangqiru/opencc-api-server:latest</span><br><span class="line">    container_name: opencc</span><br><span class="line">    environment:</span><br><span class="line">      - NODE_ENV=production</span><br><span class="line">    networks:</span><br><span class="line">      - service_only</span><br><span class="line">    restart: always</span><br><span class="line"></span><br><span class="line">  database:</span><br><span class="line">    image: postgres:<span class="number">13</span>-alpine</span><br><span class="line">    container_name: postgres</span><br><span class="line">    environment:</span><br><span class="line">      - POSTGRES_PASSWORD=ttrss</span><br><span class="line">    volumes:</span><br><span class="line">      - ./postgres/data/:/var/lib/postgresql/data</span><br><span class="line">    networks:</span><br><span class="line">      - database_only</span><br><span class="line">    restart: always</span><br><span class="line"></span><br><span class="line">volumes:</span><br><span class="line">  feed-icons:</span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  public_access:</span><br><span class="line">  service_only:</span><br><span class="line">    internal: <span class="literal">true</span></span><br><span class="line">  database_only:</span><br><span class="line">    internal: <span class="literal">true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h3 id="注意"><a href="#注意" class="headerlink" title="注意:"></a>注意:</h3><h4 id="1-注意一–代理方式"><a href="#1-注意一–代理方式" class="headerlink" title="1.注意一–代理方式"></a>1.注意一–代理方式</h4><ul>
<li>Nginx Proxy Manager<br>  正常代理即可，无需其它处理</li>
<li>宝塔<br>  代理需要进行处理，在配置文件中添加如下代码：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#PROXY-START/</span></span><br><span class="line">location  ~* \.(gif|png|jpg|css|js|woff|woff2)$</span><br><span class="line">&#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:181;</span><br><span class="line">    proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">    proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    proxy_set_header X-Forwarded-Ssl on;</span><br><span class="line">    proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    proxy_set_header REMOTE-HOST <span class="variable">$remote_addr</span>;</span><br><span class="line">    proxy_set_header  X-Frame-Options     SAMEORIGIN;</span><br><span class="line">    proxy_set_header  X-Forwarded-Proto   <span class="variable">$scheme</span>;</span><br><span class="line">    expires 12h;</span><br><span class="line">&#125;</span><br><span class="line">location /</span><br><span class="line">&#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:181;</span><br><span class="line">    proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">    proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    proxy_set_header X-Forwarded-Ssl on;</span><br><span class="line">    proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    proxy_set_header REMOTE-HOST <span class="variable">$remote_addr</span>;</span><br><span class="line">    proxy_set_header  X-Frame-Options     SAMEORIGIN;</span><br><span class="line">    proxy_set_header  X-Forwarded-Proto   <span class="variable">$scheme</span>;</span><br><span class="line">    </span><br><span class="line">    add_header X-Cache <span class="variable">$upstream_cache_status</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#Set Nginx Cache</span></span><br><span class="line">    </span><br><span class="line">    	add_header Cache-Control no-cache;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#PROXY-END/</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="2-注意二–默认登陆账号与密码"><a href="#2-注意二–默认登陆账号与密码" class="headerlink" title="2.注意二–默认登陆账号与密码"></a>2.注意二–默认登陆账号与密码</h4><p>默认登陆账号与密码:</p>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line">帐号：admin</span><br><span class="line">密码：password</span><br></pre></td></tr></table></figure>

<h4 id="3-注意三"><a href="#3-注意三" class="headerlink" title="3.注意三"></a>3.注意三</h4><p>postgres中包含用户的账号等数据</p>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line">- ./postgres/data/:/var/lib/postgresql/data</span><br></pre></td></tr></table></figure>





<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote>
<ul>
<li><a href></a></li>
<li><a href></a></li>
</ul>
</blockquote>
</font>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo使用技巧</title>
    <url>/wiki/Hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<font size="3">
本文为一些Hexo的指令，避免找寻资料的繁琐，后续也会不断增加内容。
Hexo使用技巧
<span id="more"></span>
## Hexo指令
在hexoblog文件夹内，右键点击Git Bash Here进入窗口输入指令
* 1、启动本地服务器 
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>
* 2、清空静态文件 
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>
* 3、生成静态文件 
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>
* 4、上传至git 
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>
* 5、创建新文章 
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new 文章名称.md</span><br></pre></td></tr></table></figure>
* 6、安装Nodejs插件 
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i 插件名称 --save</span><br></pre></td></tr></table></figure>
* 7、卸载Nodejs插件 
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm un 插件名称 --save</span><br></pre></td></tr></table></figure>
* 8、查看插件是否安装 
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm list 插件名称</span><br></pre></td></tr></table></figure>
* 9、[一键部署脚本up.sh]( https://hexoscript.github.io/using)  清空+生成+上传git source up.sh
* 10、一键上传 
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>

<h2 id="Git的使用"><a href="#Git的使用" class="headerlink" title="Git的使用"></a>Git的使用</h2><p>Git是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。<br>Git是将代码和文档更新并上传至网站（或下载到本地）的数据备份方式。<br>配置账号名与邮箱信息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;name&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;email&quot;</span></span><br></pre></td></tr></table></figure>
<p>生成密钥：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;email&quot;</span></span><br></pre></td></tr></table></figure>
<p>查看密钥（复制到网站设置界面“SSH公钥”内）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>
<p>初始化本地仓库：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init NAME</span><br></pre></td></tr></table></figure>
<p>添加所有文件（不会删除文件）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add .（将“.”替换成具体文件用于添加单个文件）</span><br></pre></td></tr></table></figure>
<p>更新所有文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add -A</span><br></pre></td></tr></table></figure>
<p>添加注释(commit)：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;注释内容&quot;</span></span><br></pre></td></tr></table></figure>
<p>设置网站仓库地址：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote add origin https://gitee.com/renahah/RenAhahWikiSource.git</span><br></pre></td></tr></table></figure>
<p>删除网站仓库地址：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote <span class="built_in">rm</span> origin</span><br></pre></td></tr></table></figure>
<p>同步网站仓库内容到本地：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git pull --rebase origin master</span><br></pre></td></tr></table></figure>
<p>由本地上传到网站：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>
<p>一个模板页面，在scaffolds</p>
<figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">----</span><br><span class="line">title: Hexo使用技巧  <span class="comment">//文章标题</span></span><br><span class="line">date: <span class="number">1716523860000</span>    <span class="comment">//文章创建时间</span></span><br><span class="line">permalink:          <span class="comment">//文章显示连接</span></span><br><span class="line">categories:         <span class="comment">//文章匪类目录</span></span><br><span class="line">tags: []            <span class="comment">//文章标签，可多个，用，隔开</span></span><br><span class="line">description:        <span class="comment">//文章描述</span></span><br><span class="line">image:              <span class="comment">//自定义的文章摘要图片，只在页面展示，文章内消失</span></span><br><span class="line">copyright: <span class="literal">true</span>     <span class="comment">//增加底部的版权信息（需要配置）</span></span><br><span class="line">-----</span><br><span class="line"><span class="comment">//首页文章展示缩略图</span></span><br><span class="line">&lt;img src=<span class="string">&quot;https://&quot;</span> alt=<span class="string">&quot;&quot;</span> style=<span class="string">&quot;width:100%&quot;</span> /&gt;  </span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span> 前言</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line"></span><br><span class="line">## <span class="number">0x01</span> </span><br><span class="line"></span><br><span class="line">## <span class="number">0x02</span></span><br><span class="line"></span><br><span class="line">## <span class="number">0x03</span></span><br><span class="line"></span><br><span class="line">## <span class="number">0x04</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;hr /&gt;</span><br><span class="line">版权信息</span><br></pre></td></tr></table></figure>





<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote>
<ul>
<li><a href></a></li>
<li><a href></a></li>
</ul>
</blockquote>
</font>]]></content>
      <categories>
        <category>使用技巧</category>
      </categories>
      <tags>
        <tag>Base Skill</tag>
      </tags>
  </entry>
  <entry>
    <title>Incentive</title>
    <url>/wiki/Incentive/</url>
    <content><![CDATA[<font size="3">
This is a page showing cute girls!！</font>
meanwhile it is also an incentive！
<span id="more"></span>
### A cute cat girl
![cutecat](cutecat.png)

<h3 id="A-angel-girl"><a href="#A-angel-girl" class="headerlink" title="A angel girl"></a>A angel girl</h3><p><img src="/wiki/Incentive/angel.png" alt="angel"></p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote>
<ul>
<li><a href></a></li>
<li><a href></a></li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>Incentive</category>
      </categories>
      <tags>
        <tag>Incentive</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown字体设置</title>
    <url>/wiki/Markdown%E5%AD%97%E4%BD%93%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<font size="3">
本文意在探究Markdown设置字体大小、颜色、类型、加粗等设置。在此之后无需烦恼。

<span id="more"></span>
<h3 id="改变字体大小"><a href="#改变字体大小" class="headerlink" title="改变字体大小"></a>改变字体大小</h3><p><mark>size：</mark>规定文本的尺寸大小，取值范围为1~7 ，浏览器默认值是 3。注意，size&#x3D;50也是可以显示的，但与7的字体大小一样</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;font size=1&gt;字体大小size=1&lt;/font&gt;</span><br><span class="line">&lt;font size=3&gt;字体大小size=3&lt;/font&gt;</span><br><span class="line">&lt;font size=5&gt;字体大小size=5&lt;/font&gt;</span><br></pre></td></tr></table></figure>
<p>效果：<br><font size="1">字体大小size&#x3D;1</font><br><font size="3">字体大小size&#x3D;3</font><br><font size="5">字体大小size&#x3D;5</font></p>
<h3 id="改变字体颜色"><a href="#改变字体颜色" class="headerlink" title="改变字体颜色"></a>改变字体颜色</h3><h4 id="英文字母"><a href="#英文字母" class="headerlink" title="英文字母"></a>英文字母</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;font color=red&gt;红色&lt;/font&gt;</span><br><span class="line">&lt;font color=<span class="string">&quot;blue&quot;</span>&gt;蓝色&lt;/font&gt;</span><br><span class="line">&lt;font color=Yellow&gt;黄色&lt;/font&gt;</span><br><span class="line">&lt;font color=YellowGreen&gt;黄绿色&lt;/font&gt;</span><br></pre></td></tr></table></figure>
<p>效果：<br><font color="red">红色</font><br><font color="blue">蓝色</font><br><font color="Yellow">黄色</font><br><font color="YellowGreen">黄绿色</font></p>
<h4 id="十六进制颜色值"><a href="#十六进制颜色值" class="headerlink" title="十六进制颜色值"></a>十六进制颜色值</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;font color=<span class="comment">#ff0000&gt;红色&lt;/font&gt;</span></span><br><span class="line">&lt;font color=<span class="comment">#00ff00&gt;绿色&lt;/font&gt;</span></span><br><span class="line">&lt;font color=<span class="comment">#0000ff&gt;蓝色&lt;/font&gt;</span></span><br></pre></td></tr></table></figure>
<p>效果：<br><font color="#ff0000">红色</font><br><font color="#00ff00">绿色</font><br><font color="#0000ff">蓝色</font></p>
<h3 id="改变字体类型"><a href="#改变字体类型" class="headerlink" title="改变字体类型"></a>改变字体类型</h3><p>注意，字体类型的设置只能在电脑上才能显示字体效果，在手机上无法显示字体类型</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;font face=<span class="string">&quot;黑体&quot;</span>&gt;黑体&lt;/font&gt;</span><br><span class="line">&lt;font face=<span class="string">&quot;宋体&quot;</span>&gt;宋体&lt;/font&gt;</span><br><span class="line">&lt;font face=<span class="string">&quot;仿宋&quot;</span>&gt;仿宋&lt;/font&gt;</span><br><span class="line">&lt;font face=<span class="string">&quot;幼圆&quot;</span>&gt;幼圆&lt;/font&gt;</span><br><span class="line">&lt;font face=<span class="string">&quot;楷书&quot;</span>&gt;楷书&lt;/font&gt;</span><br><span class="line">&lt;font face=<span class="string">&quot;华文行楷&quot;</span>&gt;华文行楷&lt;/font&gt;</span><br><span class="line">&lt;font face=<span class="string">&quot;华文隶书&quot;</span>&gt;华文隶书&lt;/font&gt;</span><br><span class="line">&lt;font face=<span class="string">&quot;华文新魏&quot;</span>&gt;华文新魏&lt;/font&gt;</span><br><span class="line">&lt;font face=<span class="string">&quot;华文彩云&quot;</span>&gt;华文彩云&lt;/font&gt;</span><br><span class="line">&lt;font face=<span class="string">&quot;华文琥珀&quot;</span>&gt;华文琥珀&lt;/font&gt;</span><br></pre></td></tr></table></figure>
<p>效果：<br><font face="黑体">黑体</font><br><font face="宋体">宋体</font><br><font face="仿宋">仿宋</font><br><font face="幼圆">幼圆</font><br><font face="楷书">楷书</font><br><font face="华文行楷">华文行楷</font><br><font face="华文隶书">华文隶书</font><br><font face="华文新魏">华文新魏</font><br><font face="华文彩云">华文彩云</font><br><font face="华文琥珀">华文琥珀</font></p>
<h3 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">**加粗**</span><br></pre></td></tr></table></figure>
<p>效果：<br><strong>加粗</strong></p>
<h3 id="混合使用"><a href="#混合使用" class="headerlink" title="混合使用"></a>混合使用</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;b&gt;&lt;font size=5 color=red face=<span class="string">&quot;华文彩云&quot;</span>&gt;华文彩云&lt;/font&gt;&lt;/b&gt;</span><br></pre></td></tr></table></figure>
<p>效果：<br><b><font size="5" color="red" face="华文彩云">华文彩云</font></b></p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote>
<ul>
<li><a href="https://blog.csdn.net/weixin_45634365/article/details/115438164">Markdown设置字体大小、颜色、类型、加粗</a></li>
<li><a href="https://blog.csdn.net/YZY_001/article/details/85257905">csdn如何修改文字体及颜色</a></li>
</ul>
</blockquote>
</font>]]></content>
      <categories>
        <category>使用技巧</category>
      </categories>
      <tags>
        <tag>Base Skill</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>一个Hexo的原始教程</title>
    <url>/wiki/%E4%B8%80%E4%B8%AAHexo%E7%9A%84%E5%8E%9F%E5%A7%8B%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<font size="3">
本文为网上的篇较为完整且实用性较强的教程，故收集之。

<span id="more"></span>
<h2 id="本文以winddows系统安装hexo博客框架为例"><a href="#本文以winddows系统安装hexo博客框架为例" class="headerlink" title="本文以winddows系统安装hexo博客框架为例"></a>本文以winddows系统安装hexo博客框架为例</h2><ul>
<li><p>一、hexo本地安装</p>
</li>
<li><p>二、提交到github仓库</p>
</li>
<li><p>三、最轻便，最美主题安装，以及优质主题推荐</p>
</li>
<li><p>四、在vercel容器安装hexo，添加自定义域名</p>
</li>
<li><p>五、博客内容修改，修改菜单内容，页面内容，文章添加，插件安装，seo，cdn加速加载页面</p>
</li>
<li><p>六、markdown 语法</p>
</li>
</ul>
<h3 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h3><p>1、安装环境node.js</p>
<p>安装时注意添加路径</p>
<p><a href="https://nodejs.org/en/">https://nodejs.org/en/</a></p>
<p>2、安装git bash</p>
<p><a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a></p>
<p>在 git bash 中输入以下命令启用 Hexo镜像</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
<p>在 git bash 中输入以下命令开始全局安装 Hexo</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<p>在 git bash 中输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init 自定义博客名</span><br></pre></td></tr></table></figure>


<p>在 git bash 中输入hexo g ,编译静态文件到public文件夹，这是根目录会自动生成public文件夹</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g </span><br></pre></td></tr></table></figure>
<p>在 git bash 中输入hexo s，启动本地预览，关闭gitbash后,就无法预览</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>输入 <a href="http://localhost:4000/">http://localhost:4000</a> ，能正常访问，则启动成功</p>
<h3 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a>第二部分</h3><p>3、将hexo代码提交到github仓库，</p>
<p>注册github.com账号</p>
<p>新建一个github仓库，仓库名必须是你的GitHub用户名.github.io，</p>
<p>比如1jia1.github.io</p>
<p>目的是为了搭载 GitHub Pages 服务，如果导入到vercel,可以自定义其它用户名</p>
<p>3.1、生成SSH密钥</p>
<p>在 git bash 中输入如下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;你的GitHub用户名&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git config --global user.email &quot;你注册github的邮箱&quot;</span><br></pre></td></tr></table></figure>
<p>生成密匙命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你注册github的邮箱&quot;</span><br></pre></td></tr></table></figure>
<p>在本地电脑中找到新生成的公匙，复制id_rsa.pub中的内容</p>
<p>找到github个人图像</p>
<p>设置-SSH and GPG keys-New SSH Key-粘贴公钥</p>
<p>验证是否成功</p>
<p>输入命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>3.2打开 _config.yml，找到文件最后一行的 deploy</p>
<p>替换以下代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line"></span><br><span class="line">  type: git</span><br><span class="line"></span><br><span class="line">  repo: https://github.com/你的github用户名/你的github用户名.github.io.git,main </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>安装推送命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>清理缓存，重新生成静态文件，推送到github的命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo de</span><br></pre></td></tr></table></figure>
<p>推送成功后</p>
<p>访问网址：你的GitHub用户名.github.io</p>
<h3 id="第三部分"><a href="#第三部分" class="headerlink" title="第三部分"></a>第三部分</h3><p>安装butterfly主题</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://butterfly.js.org/</span><br></pre></td></tr></table></figure>
<p>根目录下git bash 输入命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure>
<p>安装渲染器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure>
<p>修改 Hexo 根目錄下的 _config.yml，把主題改為 butterfly</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure>
<p>清理缓存，重新生成静态文件，推送到github的命令，每次更新完内容执行此命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo de</span><br></pre></td></tr></table></figure>
<p>访问网址预览效果：你的GitHub用户名.github.io</p>
<h3 id="第四部分"><a href="#第四部分" class="headerlink" title="第四部分"></a>第四部分</h3><p>在vercel容器安装hexo，添加自定义域名</p>
<p>用github同名账号登录<a href="https://vercel.com/">https://vercel.com/</a></p>
<h3 id="第五部分"><a href="#第五部分" class="headerlink" title="第五部分"></a>第五部分</h3><p>安装hexo admin 插件</p>
<p>执行以下命令即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo</span><br><span class="line">cd ~/</span><br><span class="line">hexo init my-blog</span><br><span class="line">cd my-blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install –save hexo-admin</span><br><span class="line">hexo server -d</span><br><span class="line">open http://localhost:4000/admin/</span><br></pre></td></tr></table></figure>
<p>5.1菜单栏修改<br>在 _config.yml 下找到 menu ：去掉前面的#就可以显示菜单</p>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">   首页: / || fas fa-home</span><br><span class="line">   归档: /archives/ || fas fa-archive</span><br><span class="line">   标签: /tags/ || fas fa-tags</span><br><span class="line">   分类: /categories/ || fas fa-folder-open</span><br><span class="line">   #菜单||fas fa-list:</span><br><span class="line">     #音乐: /music/ || fas fa-music</span><br><span class="line">     #电影: /movies/ || fas fa-video</span><br><span class="line">   友链: /link/ || fas fa-link</span><br><span class="line">   #关于: /about/ || fas fa-heart</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>5.2添加标签页</p>
<p>根目录输入 hexo new page tags</p>
<p>找到 source&#x2F;tags&#x2F;index.md 这个文件，修改这个文件：</p>
<p>添加 type: “tags”</p>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: <span class="number">2018</span>-<span class="number">01</span>-<span class="number">05</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line"><span class="keyword">type</span>: <span class="string">&quot;tags&quot;</span></span><br><span class="line">orderby: random</span><br><span class="line">order: <span class="number">1</span></span><br><span class="line">---</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>5.3添加子页面</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo n  页面的名称</span><br><span class="line"></span><br><span class="line">创建你的页面就行</span><br></pre></td></tr></table></figure>
<p>5.4首页顶部图片更换</p>
<h1 id="The-banner-image-of-home-page"><a href="#The-banner-image-of-home-page" class="headerlink" title="The banner image of home page"></a>The banner image of home page</h1><p>index_img: <a href="https://cdn.pixabay.com/photo/2023/10/23/03/03/fashion-8335213_1280.jpg">https://cdn.pixabay.com/photo/2023/10/23/03/03/fashion-8335213_1280.jpg</a></p>
<p>著名的无版权可商用的图片网站<br><a href="https://pixabay.com/">https://pixabay.com/</a><br>hexo主题分享<br>1.连背景都是特效的博客</p>
<p>preccrepad.github.io</p>
<p>2.番茄博客，博文里面有很多小特效，比如会动的小标签啦，图片的加载动画啦</p>
<p>tomotoes.com&#x2F;blog&#x2F;</p>
<p>github.com&#x2F;Tomotoes&#x2F;he…</p>
<p>3.一个UI设计师的博客，界面干净清爽</p>
<p>esappear.github.io&#x2F;clover&#x2F;</p>
<p>4.二次元爱好者转码人的博客，内容丰富，有点耗性能</p>
<p>shoka.lostyu.me</p>
<p>5.yilia升级版，简洁的博客，可以按主题和标签分类</p>
<p>joeybling.github.io</p>
<p>6.简单的博客框架，分类明晰，速度快，功能较少</p>
<p>hufangyun.com</p>
<p>7.暖色梵高主题，配色舒适</p>
<p><a href="http://www.nothinglin.ml/">www.nothinglin.ml/</a></p>
<p>8.标签和UI特别可爱，图片选取很用心的一个博客</p>
<p>rawchen.com&#x2F;</p>
<p>9.功能清晰，强大的主题matery，文章统计功能做得很细致</p>
<p>blinkfox.com&#x2F;</p>
<p>10.hexo-theme-redefine</p>
<p>11.butterfly</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote>
<ul>
<li><a href></a></li>
<li><a href></a></li>
</ul>
</blockquote>
</font>]]></content>
      <categories>
        <category>使用技巧</category>
      </categories>
      <tags>
        <tag>Base Skill</tag>
      </tags>
  </entry>
</search>
