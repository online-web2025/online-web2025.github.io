{"pages":[{"title":"Categories","date":"2024-05-23T13:00:33.718Z","path":"categories/index.html","text":""},{"title":"About","date":"2024-05-23T13:34:27.255Z","path":"about/index.html","text":""},{"title":"Tags","date":"2024-05-23T13:00:33.718Z","path":"tags/index.html","text":""}],"posts":[{"title":"DailyWord","date":"2024-05-24T12:37:51.000Z","path":"wiki/DailyWord/","text":"本文意在记录每日遇到的较难的英语单词，草稿纸容易丢掉，记录在云上更有性价比！ 当前时间Current time in format 1: Current time in format 2: function updateCurrentTime() { var currentTime = new Date(); // 格式1: Week Month DD, YYYY HH:mm:ss var options1 = { year: 'numeric', month: 'long', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit', weekday: 'long' }; var formattedTime1 = currentTime.toLocaleString('en-US', options1); document.getElementById('current-time-format1').textContent = formattedTime1; // 格式2: YYYY-MM-DDTHH:mm:ss var year = currentTime.getFullYear(); var month = (currentTime.getMonth() + 1).toString().padStart(2, '0'); var day = currentTime.getDate().toString().padStart(2, '0'); var hours = currentTime.getHours().toString().padStart(2, '0'); var minutes = currentTime.getMinutes().toString().padStart(2, '0'); var seconds = currentTime.getSeconds().toString().padStart(2, '0'); var formattedTime2 = `${year}-${month}-${day}T${hours}:${minutes}:${seconds}`; document.getElementById('current-time-format2').textContent = formattedTime2; } // 初次加载页面时更新时间 updateCurrentTime(); // 每秒更新一次时间 setInterval(updateCurrentTime, 1000); Wordlist2024-05-242024-05-24T21:30:29 123herd n. 一般民众 vi.(把...)赶到一起，聚到一起spur vt. 促进，加速discourse n.话语，语篇，演讲 参考资料","tags":[{"name":"English","slug":"English","permalink":"http://example.com/tags/English/"},{"name":"DailyTask","slug":"DailyTask","permalink":"http://example.com/tags/DailyTask/"}],"categories":[{"name":"学习","slug":"学习","permalink":"http://example.com/categories/%E5%AD%A6%E4%B9%A0/"},{"name":"English","slug":"学习/English","permalink":"http://example.com/categories/%E5%AD%A6%E4%B9%A0/English/"}]},{"title":"Markdown字体设置","date":"2024-05-24T12:17:34.000Z","path":"wiki/Markdown字体设置/","text":"本文意在探究Markdown设置字体大小、颜色、类型、加粗等设置。在此之后无需烦恼。 改变字体大小size：规定文本的尺寸大小，取值范围为1~7 ，浏览器默认值是 3。注意，size&#x3D;50也是可以显示的，但与7的字体大小一样 123&lt;font size=1&gt;字体大小size=1&lt;/font&gt;&lt;font size=3&gt;字体大小size=3&lt;/font&gt;&lt;font size=5&gt;字体大小size=5&lt;/font&gt; 效果：字体大小size&#x3D;1字体大小size&#x3D;3字体大小size&#x3D;5 改变字体颜色英文字母1234&lt;font color=red&gt;红色&lt;/font&gt;&lt;font color=&quot;blue&quot;&gt;蓝色&lt;/font&gt;&lt;font color=Yellow&gt;黄色&lt;/font&gt;&lt;font color=YellowGreen&gt;黄绿色&lt;/font&gt; 效果：红色蓝色黄色黄绿色 十六进制颜色值123&lt;font color=#ff0000&gt;红色&lt;/font&gt;&lt;font color=#00ff00&gt;绿色&lt;/font&gt;&lt;font color=#0000ff&gt;蓝色&lt;/font&gt; 效果：红色绿色蓝色 改变字体类型注意，字体类型的设置只能在电脑上才能显示字体效果，在手机上无法显示字体类型 12345678910&lt;font face=&quot;黑体&quot;&gt;黑体&lt;/font&gt;&lt;font face=&quot;宋体&quot;&gt;宋体&lt;/font&gt;&lt;font face=&quot;仿宋&quot;&gt;仿宋&lt;/font&gt;&lt;font face=&quot;幼圆&quot;&gt;幼圆&lt;/font&gt;&lt;font face=&quot;楷书&quot;&gt;楷书&lt;/font&gt;&lt;font face=&quot;华文行楷&quot;&gt;华文行楷&lt;/font&gt;&lt;font face=&quot;华文隶书&quot;&gt;华文隶书&lt;/font&gt;&lt;font face=&quot;华文新魏&quot;&gt;华文新魏&lt;/font&gt;&lt;font face=&quot;华文彩云&quot;&gt;华文彩云&lt;/font&gt;&lt;font face=&quot;华文琥珀&quot;&gt;华文琥珀&lt;/font&gt; 效果：黑体宋体仿宋幼圆楷书华文行楷华文隶书华文新魏华文彩云华文琥珀 加粗1**加粗** 效果：加粗 混合使用1&lt;b&gt;&lt;font size=5 color=red face=&quot;华文彩云&quot;&gt;华文彩云&lt;/font&gt;&lt;/b&gt; 效果：华文彩云 参考资料 Markdown设置字体大小、颜色、类型、加粗 csdn如何修改文字体及颜色","tags":[{"name":"Base Skill","slug":"Base-Skill","permalink":"http://example.com/tags/Base-Skill/"},{"name":"Markdown","slug":"Markdown","permalink":"http://example.com/tags/Markdown/"}],"categories":[{"name":"使用技巧","slug":"使用技巧","permalink":"http://example.com/categories/%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"}]},{"title":"Docker-compose-TTRSS","date":"2024-05-24T04:57:50.000Z","path":"wiki/Docker-compose-TTRSS/","text":"本文为Docker-compose-TTRSS项目的业务代码，且进行一些配置的说明 ### Docker-compose.yml 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960version: &quot;3&quot;services: rss: image: wangqiru/ttrss:latest container_name: ttrss ports: - 2077:80 environment: - SELF_URL_PATH=http://localhost:2077/ - DB_PASS=ttrss - PUID=1000 - PGID=1000 volumes: - feed-icons:/var/www/feed-icons/ networks: - public_access - service_only - database_only stdin_open: true tty: true restart: always mercury: image: wangqiru/mercury-parser-api:latest container_name: mercury networks: - public_access - service_only restart: always opencc: image: wangqiru/opencc-api-server:latest container_name: opencc environment: - NODE_ENV=production networks: - service_only restart: always database: image: postgres:13-alpine container_name: postgres environment: - POSTGRES_PASSWORD=ttrss volumes: - ./postgres/data/:/var/lib/postgresql/data networks: - database_only restart: alwaysvolumes: feed-icons:networks: public_access: service_only: internal: true database_only: internal: true 注意:1.注意一–代理方式 Nginx Proxy Manager 正常代理即可，无需其它处理 宝塔 代理需要进行处理，在配置文件中添加如下代码：1234567891011121314151617181920212223242526272829303132#PROXY-START/location ~* \\.(gif|png|jpg|css|js|woff|woff2)$&#123; proxy_pass http://127.0.0.1:181; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-Ssl on; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header REMOTE-HOST $remote_addr; proxy_set_header X-Frame-Options SAMEORIGIN; proxy_set_header X-Forwarded-Proto $scheme; expires 12h;&#125;location /&#123; proxy_pass http://127.0.0.1:181; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-Ssl on; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header REMOTE-HOST $remote_addr; proxy_set_header X-Frame-Options SAMEORIGIN; proxy_set_header X-Forwarded-Proto $scheme; add_header X-Cache $upstream_cache_status; #Set Nginx Cache add_header Cache-Control no-cache;&#125;#PROXY-END/ 2.注意二–默认登陆账号与密码默认登陆账号与密码: 12帐号：admin密码：password 3.注意三postgres中包含用户的账号等数据 1- ./postgres/data/:/var/lib/postgresql/data 参考资料","tags":[{"name":"Docker","slug":"Docker","permalink":"http://example.com/tags/Docker/"}],"categories":[{"name":"Docker","slug":"Docker","permalink":"http://example.com/categories/Docker/"}]},{"title":"Incentive","date":"2024-05-24T04:23:33.000Z","path":"wiki/Incentive/","text":"This is a page showing cute girls!！meanwhile it is also an incentive！ A cute cat girl A angel girl 参考资料","tags":[{"name":"Incentive","slug":"Incentive","permalink":"http://example.com/tags/Incentive/"}],"categories":[{"name":"Incentive","slug":"Incentive","permalink":"http://example.com/categories/Incentive/"}]},{"title":"Docker Bash Command","date":"2024-05-24T04:11:25.000Z","path":"wiki/Docker-Bash-Command/","text":"本文为Docker Bash Command的一些基本指令集合 ### Command 12345678910111213141516171819202122232425262728293031323334353637383940414243441.docker-compose的使用非常类似于docker命令的使用，但是需要注意的是大部分的compose命令都需要到docker-compose.yml文件所在的目录下才能执行。2.【Linux命令】docker-compose up【命令解释】 命令聚合每个容器的输出，命令退出时，所有容器都将停止。3.【Linux命令】docker-compose up -d【命令解释】 在后台启动容器并使它们保持运行。4.【Linux命令】docker-compose logs -f【命令解释】 查看该容器的启动的日志打印(日志从头打印)。5.【Linux命令】docker logs -f container_id【命令解释】 查看某一容器的启动的日志打印(日志从头打印)。6.【Linux命令】docker logs -f --tail 数量词 container_id【命令解释】 查看某一容器的启动的日志打印(查看最后n条日志打印)。 例：docker logs -f --tail 50 44b7.【Linux命令】docker-compose stop【命令解释】 停止compose服务。8.【Linux命令】docker-compose restart【命令解释】 重启compose服务。9.【Linux命令】docker-compose kill【命令解释】 kill compose服务。10.【Linux命令】docker-compose ps【命令解释】查看compose服务状态。11.【Linux命令】docker-compose rm【命令解释】删除compose服务。 参考资料","tags":[{"name":"Docker","slug":"Docker","permalink":"http://example.com/tags/Docker/"}],"categories":[{"name":"Docker","slug":"Docker","permalink":"http://example.com/categories/Docker/"}]},{"title":"Docker && Compose Install","date":"2024-05-24T04:11:18.000Z","path":"wiki/Docker-Compose-Install/","text":"本文对Docker && Compose Install的安装的指令进行收集，避免再次网上收集的繁琐 ## 一、Docker安装与Docker-Compose安装 ### 1.安装 Docker（非大陆服务器） 1wget -qO- get.docker.com | bash 1docker -v #查看 docker 版本 1systemctl enable docker # 设置开机自动启动 2.安装 Docker-compose（非大陆服务器）1sudo curl -L &quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose 1sudo chmod +x /usr/local/bin/docker-compose 1docker-compose --version #查看 docker-compose 版本 3.安装 Docker（国内服务器）1curl -sSL https://get.daocloud.io/docker | sh 1docker -v #查看 docker 版本 1systemctl enable docker # 设置开机自动启动 4.安装 Docker-compose（国内服务器）1curl -L https://get.daocloud.io/docker/compose/releases/download/v2.1.1/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose 1chmod +x /usr/local/bin/docker-compose 1docker-compose --version #查看 docker-compose 版本 二、必要设置1.设置一以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘(泪的教训): 1234567891011121314cat &gt; /etc/docker/daemon.json &lt;&lt;EOF&#123; &quot;log-driver&quot;: &quot;json-file&quot;, &quot;log-opts&quot;: &#123; &quot;max-size&quot;: &quot;20m&quot;, &quot;max-file&quot;: &quot;3&quot; &#125;, &quot;ipv6&quot;: true, &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;, &quot;experimental&quot;:true, &quot;ip6tables&quot;:true&#125;EOF 然后重启 Docker 服务： 1systemctl restart docker 参考资料","tags":[{"name":"Docker","slug":"Docker","permalink":"http://example.com/tags/Docker/"}],"categories":[{"name":"Docker","slug":"Docker","permalink":"http://example.com/categories/Docker/"}]},{"title":"Docker-compose-Halo","date":"2024-05-24T04:11:12.000Z","path":"wiki/Docker-compose-Halo/","text":"本文为Docker-compose-Halo项目的业务代码，且进行一些配置的说明 ### Docker-compose.yml 123456789version: &#x27;3.9&#x27; services: halo: image: &#x27;halohub/halo:2.15&#x27; volumes: - &#x27;~/.halo2:/root/.halo2&#x27; ports: - &#x27;8090:8090&#x27; container_name: halo 注意:1.注意一：进入后台： 1ip:port/console 2.注意二：值得一提的 1- &#x27;~/.halo2:/root/.halo2&#x27; ~.&#x2F;halo2必须存在，否则工程无法的正常运行 参考资料","tags":[{"name":"Docker","slug":"Docker","permalink":"http://example.com/tags/Docker/"}],"categories":[{"name":"Docker","slug":"Docker","permalink":"http://example.com/categories/Docker/"}]},{"title":"Hexo使用技巧","date":"2024-05-24T04:11:00.000Z","path":"wiki/Hexo使用技巧/","text":"本文为一些Hexo的指令，避免找寻资料的繁琐，后续也会不断增加内容。 Hexo使用技巧 ## Hexo指令 在hexoblog文件夹内，右键点击Git Bash Here进入窗口输入指令 * 1、启动本地服务器 1hexo s * 2、清空静态文件 1hexo clean * 3、生成静态文件 1hexo g * 4、上传至git 1hexo d * 5、创建新文章 1hexo new 文章名称.md * 6、安装Nodejs插件 1npm i 插件名称 --save * 7、卸载Nodejs插件 1npm un 插件名称 --save * 8、查看插件是否安装 1npm list 插件名称 * 9、[一键部署脚本up.sh]( https://hexoscript.github.io/using) 清空+生成+上传git source up.sh * 10、一键上传 1hexo clean &amp;&amp; hexo g &amp;&amp; hexo d Git的使用Git是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。Git是将代码和文档更新并上传至网站（或下载到本地）的数据备份方式。配置账号名与邮箱信息： 12git config --global user.name &quot;name&quot;git config --global user.email &quot;email&quot; 生成密钥： 1ssh-keygen -t rsa -C &quot;email&quot; 查看密钥（复制到网站设置界面“SSH公钥”内）： 1cat ~/.ssh/id_rsa.pub 初始化本地仓库： 1git init NAME 添加所有文件（不会删除文件）： 1git add .（将“.”替换成具体文件用于添加单个文件） 更新所有文件： 1git add -A 添加注释(commit)： 1git commit -m &quot;注释内容&quot; 设置网站仓库地址： 1git remote add origin https://gitee.com/renahah/RenAhahWikiSource.git 删除网站仓库地址： 1git remote rm origin 同步网站仓库内容到本地： 1git pull --rebase origin master 由本地上传到网站： 1git push -u origin master 一个模板页面，在scaffolds 1234567891011121314151617181920212223242526272829303132----title: Hexo使用技巧 //文章标题date: 1716523860000 //文章创建时间permalink: //文章显示连接categories: //文章匪类目录tags: [] //文章标签，可多个，用，隔开description: //文章描述image: //自定义的文章摘要图片，只在页面展示，文章内消失copyright: true //增加底部的版权信息（需要配置）-----//首页文章展示缩略图&lt;img src=&quot;https://&quot; alt=&quot;&quot; style=&quot;width:100%&quot; /&gt; 0x00 前言&lt;!-- more --&gt;## 0x01 ## 0x02## 0x03## 0x04&lt;hr /&gt;版权信息 参考资料","tags":[{"name":"Base Skill","slug":"Base-Skill","permalink":"http://example.com/tags/Base-Skill/"}],"categories":[{"name":"使用技巧","slug":"使用技巧","permalink":"http://example.com/categories/%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"}]},{"title":"一个Hexo的原始教程","date":"2024-05-24T04:10:53.000Z","path":"wiki/一个Hexo的原始教程/","text":"本文为网上的篇较为完整且实用性较强的教程，故收集之。 本文以winddows系统安装hexo博客框架为例 一、hexo本地安装 二、提交到github仓库 三、最轻便，最美主题安装，以及优质主题推荐 四、在vercel容器安装hexo，添加自定义域名 五、博客内容修改，修改菜单内容，页面内容，文章添加，插件安装，seo，cdn加速加载页面 六、markdown 语法 第一部分1、安装环境node.js 安装时注意添加路径 https://nodejs.org/en/ 2、安装git bash https://git-scm.com/download/win 在 git bash 中输入以下命令启用 Hexo镜像 1npm config set registry https://registry.npm.taobao.org 在 git bash 中输入以下命令开始全局安装 Hexo 1npm install -g hexo-cli 在 git bash 中输入 1hexo init 自定义博客名 在 git bash 中输入hexo g ,编译静态文件到public文件夹，这是根目录会自动生成public文件夹 1hexo g 在 git bash 中输入hexo s，启动本地预览，关闭gitbash后,就无法预览 1hexo s 输入 http://localhost:4000 ，能正常访问，则启动成功 第二部分3、将hexo代码提交到github仓库， 注册github.com账号 新建一个github仓库，仓库名必须是你的GitHub用户名.github.io， 比如1jia1.github.io 目的是为了搭载 GitHub Pages 服务，如果导入到vercel,可以自定义其它用户名 3.1、生成SSH密钥 在 git bash 中输入如下命令 1234git config --global user.name &quot;你的GitHub用户名&quot;git config --global user.email &quot;你注册github的邮箱&quot; 生成密匙命令 1ssh-keygen -t rsa -C &quot;你注册github的邮箱&quot; 在本地电脑中找到新生成的公匙，复制id_rsa.pub中的内容 找到github个人图像 设置-SSH and GPG keys-New SSH Key-粘贴公钥 验证是否成功 输入命令 12ssh -T git@github.com 3.2打开 _config.yml，找到文件最后一行的 deploy 替换以下代码 123456deploy: type: git repo: https://github.com/你的github用户名/你的github用户名.github.io.git,main 安装推送命令 1npm install hexo-deployer-git --save 清理缓存，重新生成静态文件，推送到github的命令 1hexo clean &amp;&amp; hexo g &amp;&amp; hexo de 推送成功后 访问网址：你的GitHub用户名.github.io 第三部分安装butterfly主题 1https://butterfly.js.org/ 根目录下git bash 输入命令 1git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly 安装渲染器 1npm install hexo-renderer-pug hexo-renderer-stylus --save 修改 Hexo 根目錄下的 _config.yml，把主題改為 butterfly 1theme: butterfly 清理缓存，重新生成静态文件，推送到github的命令，每次更新完内容执行此命令 1hexo clean &amp;&amp; hexo g &amp;&amp; hexo de 访问网址预览效果：你的GitHub用户名.github.io 第四部分在vercel容器安装hexo，添加自定义域名 用github同名账号登录https://vercel.com/ 第五部分安装hexo admin 插件 执行以下命令即可 12345npm install -g hexocd ~/hexo init my-blogcd my-blognpm install 123npm install –save hexo-adminhexo server -dopen http://localhost:4000/admin/ 5.1菜单栏修改在 _config.yml 下找到 menu ：去掉前面的#就可以显示菜单 1234567891011menu: 首页: / || fas fa-home 归档: /archives/ || fas fa-archive 标签: /tags/ || fas fa-tags 分类: /categories/ || fas fa-folder-open #菜单||fas fa-list: #音乐: /music/ || fas fa-music #电影: /movies/ || fas fa-video 友链: /link/ || fas fa-link #关于: /about/ || fas fa-heart 5.2添加标签页 根目录输入 hexo new page tags 找到 source&#x2F;tags&#x2F;index.md 这个文件，修改这个文件： 添加 type: “tags” 12345678---title: 标签date: 2018-01-05 00:00:00type: &quot;tags&quot;orderby: randomorder: 1--- 5.3添加子页面 123hexo n 页面的名称创建你的页面就行 5.4首页顶部图片更换 The banner image of home pageindex_img: https://cdn.pixabay.com/photo/2023/10/23/03/03/fashion-8335213_1280.jpg 著名的无版权可商用的图片网站https://pixabay.com/hexo主题分享1.连背景都是特效的博客 preccrepad.github.io 2.番茄博客，博文里面有很多小特效，比如会动的小标签啦，图片的加载动画啦 tomotoes.com&#x2F;blog&#x2F; github.com&#x2F;Tomotoes&#x2F;he… 3.一个UI设计师的博客，界面干净清爽 esappear.github.io&#x2F;clover&#x2F; 4.二次元爱好者转码人的博客，内容丰富，有点耗性能 shoka.lostyu.me 5.yilia升级版，简洁的博客，可以按主题和标签分类 joeybling.github.io 6.简单的博客框架，分类明晰，速度快，功能较少 hufangyun.com 7.暖色梵高主题，配色舒适 www.nothinglin.ml/ 8.标签和UI特别可爱，图片选取很用心的一个博客 rawchen.com&#x2F; 9.功能清晰，强大的主题matery，文章统计功能做得很细致 blinkfox.com&#x2F; 10.hexo-theme-redefine 11.butterfly 参考资料","tags":[{"name":"Base Skill","slug":"Base-Skill","permalink":"http://example.com/tags/Base-Skill/"}],"categories":[{"name":"使用技巧","slug":"使用技巧","permalink":"http://example.com/categories/%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"}]}],"categories":[{"name":"学习","slug":"学习","permalink":"http://example.com/categories/%E5%AD%A6%E4%B9%A0/"},{"name":"English","slug":"学习/English","permalink":"http://example.com/categories/%E5%AD%A6%E4%B9%A0/English/"},{"name":"使用技巧","slug":"使用技巧","permalink":"http://example.com/categories/%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"},{"name":"Docker","slug":"Docker","permalink":"http://example.com/categories/Docker/"},{"name":"Incentive","slug":"Incentive","permalink":"http://example.com/categories/Incentive/"}],"tags":[{"name":"English","slug":"English","permalink":"http://example.com/tags/English/"},{"name":"DailyTask","slug":"DailyTask","permalink":"http://example.com/tags/DailyTask/"},{"name":"Base Skill","slug":"Base-Skill","permalink":"http://example.com/tags/Base-Skill/"},{"name":"Markdown","slug":"Markdown","permalink":"http://example.com/tags/Markdown/"},{"name":"Docker","slug":"Docker","permalink":"http://example.com/tags/Docker/"},{"name":"Incentive","slug":"Incentive","permalink":"http://example.com/tags/Incentive/"}]}